{"version":3,"sources":["components/navBar.jsx","data/transform-data.jsx","components/transform/output.jsx","data/grid-data.jsx","components/grid/output.jsx","data/flexbox-data.jsx","components/flexbox/output.jsx","components/modal.jsx","components/transform/sidebar.jsx","components/transform/main.jsx","components/grid/sidebar.jsx","components/grid/main.jsx","components/flexbox/sidebar.jsx","components/flexbox/main.jsx","App.js","serviceWorker.js","index.js"],"names":["links","icon","name","link","Navbar","react_default","a","createElement","className","map","x","i","react_router_dom","key","to","exact","React","createContext","Provider","Consumer","TransformData","state","pv","value","max","min","rotateX","rotateY","rotateZ","skewX","skewY","scaleX","scaleY","_this2","this","addRotate","e","setState","Object","defineProperty","target","reset","styles","transformStyle","transform","concat","width","height","border","boxShadow","borderRadius","transition","props","children","Component","TransformOutput","context","id","readOnly","rows","cols","type","onClick","document","getElementById","select","execCommand","GridData","columns","gap","items","align","justify","grid_data_Provider","addCol","removeCol","addItem","toConsumableArray","push","removeItem","length","pop","onSelect","console","log","gridStyle","display","gridTemplateColumns","gridGap","alignContent","justifyContent","itemStyle","GridOutput","grid_data_Consumer","FlexboxData","flexbox_data_Provider","flexDirection","flexWrap","alignItems","FlexboxOutput","flexbox_data_Consumer","Modal","open","handleOpen","_this","modal","style","opacity","Fragment","fontSize","color","toRender","output","grid_output","flexbox_output","href","rel","Sidebar","keys","htmlFor","str","charAt","toUpperCase","slice","step","onChange","Main","_ref","buttons","class","SidebarGrid","MainGrid","SidebarFlexbox","MainFlexbox","routes","path","sidebar","transform_sidebar","main","transform_main","grid_sidebar","grid_main","flexbox_sidebar","flexbox_main","App","transform_data_TransformData","grid_data_GridData","flexbox_data_FlexboxData","navBar","route","react_router","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d5d293a8.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst links = [\r\n  {\r\n    icon: \"fas fa-cube\",\r\n    name: \"3D Transforms\",\r\n    link: \"/CSS-Tool/\"\r\n  },\r\n  {\r\n    icon: \"fas fa-th-large\",\r\n    name: \"Grid\",\r\n    link: \"/CSS-Tool/grid\"\r\n  },\r\n  {\r\n    icon: \"fas fa-box\",\r\n    name: \"Flexbox\",\r\n    link: \"/CSS-Tool/flexbox\"\r\n  }\r\n];\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <div className=\"header\">\r\n      <h1 className=\"rotate\">CSS 3D Tool</h1>\r\n      <nav>\r\n        <ul>\r\n          {links.map((x, i) => {\r\n            return (\r\n              <NavLink className=\"tooltip li\" key={i} to={x.link} exact>\r\n                <i className={x.icon} name={x.name} />\r\n                <span className=\"tooltiptext\">{x.name}</span>\r\n              </NavLink>\r\n            );\r\n          })}\r\n        </ul>\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React, { Component } from \"react\";\r\n\r\nexport const { Provider, Consumer } = React.createContext();\r\n\r\nexport default class TransformData extends Component {\r\n  state = {\r\n    pv: { name: \"pv\", value: 0, max: \"1000\", min: \"0\" },\r\n    rotateX: { name: \"rotateX\", value: 0, max: \"360\", min: \"-360\" },\r\n    rotateY: { name: \"rotateY\", value: 0, max: \"360\", min: \"-360\" },\r\n    rotateZ: { name: \"rotateZ\", value: 0, max: \"360\", min: \"-360\" },\r\n    skewX: { name: \"skewX\", value: 0, max: \"50\", min: \"-50\" },\r\n    skewY: { name: \"skewY\", value: 0, max: \"50\", min: \"-50\" },\r\n    scaleX: { name: \"scaleX\", value: 1, max: \"10\", min: \"1\" },\r\n    scaleY: { name: \"scaleY\", value: 1, max: \"10\", min: \"1\" }\r\n\r\n    // width: { name: \"width\", value: 200, max: \"400\", min: \"20\" },\r\n    // height: { name: \"height\", value: 200, max: \"400\", min: \"20\" }\r\n  };\r\n  render() {\r\n    return (\r\n      <Provider\r\n        value={{\r\n          state: this.state,\r\n\r\n          addRotate: e => {\r\n            this.setState({\r\n              [e.target.name]: {\r\n                value: e.target.value,\r\n                name: this.state[e.target.name].name,\r\n                min: this.state[e.target.name].min,\r\n                max: this.state[e.target.name].max\r\n              }\r\n            });\r\n          },\r\n\r\n          reset: () => {\r\n            this.setState({\r\n              pv: {\r\n                name: \"pv\",\r\n                value: 0,\r\n                max: \"1000\",\r\n                min: \"0\"\r\n              },\r\n              rotateX: { name: \"rotateX\", value: 0, max: \"360\", min: \"-360\" },\r\n              rotateY: { name: \"rotateY\", value: 0, max: \"360\", min: \"-360\" },\r\n              rotateZ: { name: \"rotateZ\", value: 0, max: \"360\", min: \"-360\" },\r\n              skewX: { name: \"skewX\", value: 0, max: \"50\", min: \"-50\" },\r\n              skewY: { name: \"skewY\", value: 0, max: \"50\", min: \"-50\" },\r\n              scaleX: { name: \"scaleX\", value: 1, max: \"10\", min: \"1\" },\r\n              scaleY: { name: \"scaleY\", value: 1, max: \"10\", min: \"1\" }\r\n              // width: { name: \"width\", value: 200, max: \"400\", min: \"20\" },\r\n              // height: { name: \"height\", value: 200, max: \"400\", min: \"20\" }\r\n            });\r\n          },\r\n\r\n          styles: {\r\n            transformStyle: `preserve-3d`,\r\n            transform: `perspective(${this.state.pv.value}px) rotateX(${\r\n              this.state.rotateX.value\r\n            }deg) rotateY(${this.state.rotateY.value}deg) rotateZ(${\r\n              this.state.rotateZ.value\r\n            }deg) skewX(${this.state.skewX.value}deg) skewY(${\r\n              this.state.skewY.value\r\n            }deg) scaleX(${this.state.scaleX.value}) scaleY(${\r\n              this.state.scaleY.value\r\n            }) `,\r\n\r\n            width: `200px`,\r\n            height: `200px`,\r\n            border: `1px solid #000`,\r\n            boxShadow: `1px 1px 1px #000`,\r\n            borderRadius: `20px`,\r\n            transition: `all 0.6s`\r\n          }\r\n        }}\r\n      >\r\n        {this.props.children}\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Consumer } from \"../../data/transform-data\";\r\n\r\nconst handleCopy = target => {\r\n  const copyCSS = document.getElementById(target);\r\n  copyCSS.select();\r\n  document.execCommand(\"copy\");\r\n};\r\n\r\nconst TransformOutput = () => {\r\n  return (\r\n    <Consumer>\r\n      {context => (\r\n        <div className=\"output\">\r\n          <textarea\r\n            id=\"copy-target\"\r\n            readOnly={true}\r\n            rows=\"7\"\r\n            cols=\"40\"\r\n            value={`.mystyle {\\n  width:200px;\\n  height:200px;\\n  transform-style: preserve-3d;\\n  transform:perspective(${\r\n              context.state.pv.value\r\n            }px) rotateX(${context.state.rotateX.value}deg) rotateY(${\r\n              context.state.rotateY.value\r\n            }deg) rotateZ(${context.state.rotateZ.value}deg)  skewX(${\r\n              context.state.skewX.value\r\n            }deg)  skewY(${context.state.skewY.value}deg)  scaleX(${\r\n              context.state.scaleX.value\r\n            }) scaleY(${context.state.scaleY.value}); \\n }`}\r\n          />\r\n          <button\r\n            type=\"button\"\r\n            className=\"copy-modalBTN\"\r\n            onClick={() => handleCopy(\"copy-target\")}\r\n          >\r\n            Copy CSS\r\n          </button>\r\n        </div>\r\n      )}\r\n    </Consumer>\r\n  );\r\n};\r\n\r\nexport default TransformOutput;\r\n","import React, { Component } from \"react\";\r\n\r\nexport const { Consumer, Provider } = React.createContext();\r\n\r\nexport default class GridData extends Component {\r\n  state = {\r\n    columns: 3,\r\n    gap: 10,\r\n    items: [{ name: \"item\" }, { name: \"item\" }, { name: \"item\" }],\r\n    align: \"start\",\r\n    justify: \"start\"\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Provider\r\n        value={{\r\n          state: this.state,\r\n\r\n          addCol: () => {\r\n            if (this.state.columns === 12) return;\r\n            this.setState({\r\n              columns: this.state.columns + 1\r\n            });\r\n          },\r\n\r\n          removeCol: () => {\r\n            if (this.state.columns === 1) return;\r\n            this.setState({\r\n              columns: this.state.columns - 1\r\n            });\r\n          },\r\n\r\n          addItem: () => {\r\n            const items = [...this.state.items];\r\n            items.push({ name: \"item\" });\r\n            this.setState({\r\n              items\r\n            });\r\n          },\r\n          removeItem: () => {\r\n            if (this.state.items.length === 1) return;\r\n            const items = [...this.state.items];\r\n            items.pop();\r\n            this.setState({\r\n              items\r\n            });\r\n          },\r\n\r\n          onSelect: e => {\r\n            console.log([e.target.name] + \":\" + [e.target.value]);\r\n            this.setState({\r\n              [e.target.name]: [e.target.value]\r\n            });\r\n          },\r\n\r\n          reset: () => {\r\n            this.setState({\r\n              columns: 3,\r\n              gap: 10,\r\n              items: [{ name: \"item\" }, { name: \"item\" }, { name: \"item\" }],\r\n              align: \"start\",\r\n              justify: \"start\"\r\n            });\r\n          },\r\n\r\n          gridStyle: {\r\n            display: `grid`,\r\n            gridTemplateColumns: `repeat(${this.state.columns}, 1fr)`,\r\n            gridGap: `${this.state.gap}px`,\r\n            alignContent: `${this.state.align}`,\r\n            justifyContent: `${this.state.justify}`\r\n          },\r\n\r\n          itemStyle: {\r\n            border: `1px solid black`,\r\n            borderRadius: `10px`\r\n          }\r\n        }}\r\n      >\r\n        {this.props.children}\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Consumer } from \"../../data/grid-data\";\r\n\r\nconst handleCopy = target => {\r\n  const copyCSS = document.getElementById(target);\r\n  copyCSS.select();\r\n  document.execCommand(\"copy\");\r\n};\r\n\r\nconst GridOutput = () => {\r\n  return (\r\n    <Consumer>\r\n      {context => (\r\n        <div className=\"output\">\r\n          <textarea\r\n            id=\"copy-target\"\r\n            readOnly={true}\r\n            rows=\"12\"\r\n            cols=\"40\"\r\n            value={`.container {\\n  display: grid;\\n  grid-template-columns: repeat(${\r\n              context.state.columns\r\n            }, 1fr);\\n  grid-gap: ${context.state.gap}px;\\n  align-content: ${\r\n              context.state.align\r\n            };\\n  justify-content: ${\r\n              context.state.justify\r\n            };\\n}\\n.items {\\n  border: 1px solid black;\\n  border-radius: 10px;\\n}`}\r\n          />\r\n          <button\r\n            type=\"button\"\r\n            className=\"copy-modalBTN\"\r\n            onClick={() => handleCopy(\"copy-target\")}\r\n          >\r\n            Copy CSS\r\n          </button>\r\n        </div>\r\n      )}\r\n    </Consumer>\r\n  );\r\n};\r\n\r\nexport default GridOutput;\r\n","import React, { Component } from \"react\";\r\n\r\nexport const { Consumer, Provider } = React.createContext();\r\n\r\nexport default class FlexboxData extends Component {\r\n  state = {\r\n    gap: 10,\r\n    items: [{ name: \"item\" }, { name: \"item\" }, { name: \"item\" }],\r\n    align: \"start\",\r\n    justify: \"start\"\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Provider\r\n        value={{\r\n          state: this.state,\r\n\r\n          addItem: () => {\r\n            const items = [...this.state.items];\r\n            items.push({ name: \"item\" });\r\n            this.setState({\r\n              items\r\n            });\r\n          },\r\n          removeItem: () => {\r\n            if (this.state.items.length === 1) return;\r\n            const items = [...this.state.items];\r\n            items.pop();\r\n            this.setState({\r\n              items\r\n            });\r\n          },\r\n\r\n          onSelect: e => {\r\n            this.setState({\r\n              [e.target.name]: [e.target.value]\r\n            });\r\n          },\r\n\r\n          reset: () => {\r\n            this.setState({\r\n              gap: 10,\r\n              items: [{ name: \"item\" }, { name: \"item\" }, { name: \"item\" }],\r\n              align: \"start\",\r\n              justify: \"start\"\r\n            });\r\n          },\r\n\r\n          gridStyle: {\r\n            display: `flex`,\r\n            gridGap: `${this.state.gap}px`,\r\n            flexDirection: `row`,\r\n            flexWrap: `nowrap`,\r\n            alignItems: `${this.state.align}`,\r\n            justifyContent: `${this.state.justify}`\r\n          },\r\n\r\n          itemStyle: {\r\n            border: `1px solid black`,\r\n            borderRadius: `10px`\r\n          }\r\n        }}\r\n      >\r\n        {this.props.children}\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Consumer } from \"../../data/flexbox-data\";\r\n\r\nconst handleCopy = target => {\r\n  const copyCSS = document.getElementById(target);\r\n  copyCSS.select();\r\n  document.execCommand(\"copy\");\r\n};\r\n\r\nconst FlexboxOutput = () => {\r\n  return (\r\n    <Consumer>\r\n      {context => (\r\n        <div className=\"output\">\r\n          <textarea\r\n            id=\"copy-target\"\r\n            readOnly={true}\r\n            rows=\"8\"\r\n            cols=\"40\"\r\n            value={`.container {\\n  display: flex;\\n  grid-gap: ${\r\n              context.state.gap\r\n            }px;\\n  flex-direction: row;\\n  flex-wrap: nowrap;\\n  align-items: ${\r\n              context.state.align\r\n            };\\n  justify-content: ${context.state.justify};\\n}`}\r\n          />\r\n          <button\r\n            type=\"button\"\r\n            className=\"copy-modalBTN\"\r\n            onClick={() => handleCopy(\"copy-target\")}\r\n          >\r\n            Copy CSS\r\n          </button>\r\n        </div>\r\n      )}\r\n    </Consumer>\r\n  );\r\n};\r\n\r\nexport default FlexboxOutput;\r\n","import React, { Component } from \"react\";\r\nimport TransformOutput from \"./transform/output\";\r\nimport GridOutput from \"./grid/output\";\r\nimport FlexboxOutput from \"./flexbox/output\";\r\n\r\nclass Modal extends Component {\r\n  state = {\r\n    open: false\r\n  };\r\n\r\n  handleOpen = () => {\r\n    this.setState({\r\n      open: !this.state.open\r\n    });\r\n    const modal = document.getElementById(\"myModal\");\r\n    if (this.state.open) {\r\n      modal.style.display = \"block\";\r\n      modal.style.opacity = 1;\r\n    } else {\r\n      modal.style.display = \"none\";\r\n      modal.style.opacity = 0;\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div id=\"myModal\" className=\"modal\">\r\n          <div className=\"modal-content\">\r\n            <span\r\n              style={{ fontSize: \"2rem\" }}\r\n              className=\"close\"\r\n              onClick={this.handleOpen}\r\n            >\r\n              &times;\r\n            </span>\r\n            <h1 style={{ color: \"white\" }}>CSS (Without Prefix)</h1>\r\n            {/* We show the css results based on the property that we receive */}\r\n            {this.props.toRender === \"Transform Output\" ? (\r\n              <TransformOutput />\r\n            ) : this.props.toRender === \"Grid Output\" ? (\r\n              <GridOutput />\r\n            ) : this.props.toRender === \"Flexbox Output\" ? (\r\n              <FlexboxOutput />\r\n            ) : null}\r\n          </div>\r\n        </div>\r\n        <button id=\"myBtn\" className=\"show\" onClick={this.handleOpen}>\r\n          Show Code\r\n        </button>\r\n\r\n        <a\r\n          href=\"https://github.com/af009/CSS-3D-Tool\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n          className=\"gitBTN\"\r\n        >\r\n          <i className=\"fab fa-github\" />\r\n        </a>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Modal;\r\n","import React from \"react\";\r\nimport { Consumer } from \"../../data/transform-data\";\r\nimport Modal from \"../modal\";\r\n\r\nfunction upCase(str) {\r\n  return str.charAt(0).toUpperCase() + str.slice(1);\r\n}\r\n\r\n// const handleShow = () => {\r\n//   let showBTN = document.getElementById(\"show\").textContent;\r\n//   document.getElementById(\"show\").textContent =\r\n//     showBTN === \"Show CSS\" ? \"Hide CSS\" : \"Show CSS\";\r\n//   const copyCSS = document.querySelector(\".output\");\r\n//   copyCSS.classList.toggle(\"active-output\");\r\n// };\r\n\r\nconst Sidebar = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <h1 className=\"h1-grid\">Transforms</h1>\r\n      <div className=\"panelTransform\">\r\n        <Consumer>\r\n          {context => (\r\n            <React.Fragment>\r\n              {Object.keys(context.state).map((x, i) => {\r\n                return (\r\n                  <div className=\"inputContainer\" key={i}>\r\n                    <label htmlFor=\"input\">\r\n                      <span className=\"inputName\">\r\n                        {upCase(context.state[x].name)}\r\n                      </span>\r\n                      <span className=\"inputValue\">\r\n                        {context.state[x].value}\r\n                      </span>\r\n                    </label>\r\n                    <input\r\n                      type=\"range\"\r\n                      max={context.state[x].max}\r\n                      min={context.state[x].min}\r\n                      step=\"1\"\r\n                      value={context.state[x].value}\r\n                      onChange={e => context.addRotate(e)}\r\n                      name={context.state[x].name}\r\n                    />\r\n                  </div>\r\n                );\r\n              })}\r\n\r\n              <Modal toRender=\"Transform Output\" />\r\n\r\n              <button type=\"button\" className=\"reset\" onClick={context.reset}>\r\n                Reset\r\n              </button>\r\n            </React.Fragment>\r\n          )}\r\n        </Consumer>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import React from \"react\";\r\nimport { Consumer } from \"../../data/transform-data\";\r\n\r\nconst Main = () => {\r\n  return (\r\n    <Consumer>\r\n      {({ styles }) => (\r\n        <div className=\"face\">\r\n          <h1 style={styles}>Face</h1>\r\n        </div>\r\n      )}\r\n    </Consumer>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import React from \"react\";\r\nimport { Consumer } from \"../../data/grid-data\";\r\nimport Modal from \"../modal\";\r\n\r\nconst alignContent = [\r\n  \"start\",\r\n  \"end\",\r\n  \"center\",\r\n  \"stretch\",\r\n  \"space-around\",\r\n  \"space-between\",\r\n  \"space-evenly\"\r\n];\r\n\r\nconst buttons = [\r\n  {\r\n    name: \"Remove Item\",\r\n    value: \"removeItem\",\r\n    class: \"fas fa-minus-circle\"\r\n  },\r\n\r\n  {\r\n    name: \"Remove Column\",\r\n    value: \"removeCol\",\r\n    class: \"fas fa-minus-circle\"\r\n  },\r\n  {\r\n    name: \"Add Item\",\r\n    value: \"addItem\",\r\n    class: \"fas fa-plus-circle\"\r\n  },\r\n  {\r\n    name: \"Add Column\",\r\n    value: \"addCol\",\r\n    class: \"fas fa-plus-circle\"\r\n  }\r\n];\r\n\r\nconst SidebarGrid = () => {\r\n  return (\r\n    <Consumer>\r\n      {context => (\r\n        <React.Fragment>\r\n          <h1 className=\"h1-grid\">Grid</h1>\r\n          <div className=\"buttons\">\r\n            <h2 className=\"h1-grid\">Items: {context.state.items.length}</h2>\r\n            <h2 className=\"h1-grid\">Columns: {context.state.columns}</h2>\r\n          </div>\r\n          <div className=\"buttons\">\r\n            {buttons.map((x, i) => {\r\n              return (\r\n                <i\r\n                  className={x.class}\r\n                  onClick={context[x.value]}\r\n                  name={x.name}\r\n                  key={x + i}\r\n                />\r\n              );\r\n            })}\r\n\r\n            <label htmlFor=\"align\">Content Align</label>\r\n            <select\r\n              name=\"align\"\r\n              id=\"align\"\r\n              onChange={context.onSelect}\r\n              value={context.state.align}\r\n            >\r\n              {alignContent.map((x, i) => {\r\n                return (\r\n                  <option value={x} key={i + x}>\r\n                    {\" \"}\r\n                    {x}\r\n                  </option>\r\n                );\r\n              })}\r\n            </select>\r\n            <label htmlFor=\"justify\">Justify Content</label>\r\n            <select\r\n              name=\"justify\"\r\n              id=\"justify\"\r\n              onChange={context.onSelect}\r\n              value={context.state.justify}\r\n            >\r\n              {alignContent.map((x, i) => {\r\n                return (\r\n                  <option value={x} key={i}>\r\n                    {\" \"}\r\n                    {x}\r\n                  </option>\r\n                );\r\n              })}\r\n            </select>\r\n            <Modal toRender=\"Grid Output\" />\r\n            <button className=\"reset\" onClick={context.reset}>\r\n              Reset\r\n            </button>\r\n          </div>\r\n        </React.Fragment>\r\n      )}\r\n    </Consumer>\r\n  );\r\n};\r\n\r\nexport default SidebarGrid;\r\n","import React from \"react\";\r\nimport { Consumer } from \"../../data/grid-data\";\r\n\r\nconst MainGrid = () => {\r\n  return (\r\n    <Consumer>\r\n      {context => (\r\n        <div className=\"face\" style={context.gridStyle}>\r\n          {context.state.items.map((x, i) => {\r\n            return (\r\n              <div className=\"items\" key={i}>\r\n                <span className=\"span\">\r\n                  {x.name} {i + 1}\r\n                </span>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      )}\r\n    </Consumer>\r\n  );\r\n};\r\n\r\nexport default MainGrid;\r\n","import React from \"react\";\r\nimport { Consumer } from \"../../data/flexbox-data\";\r\nimport Modal from \"../modal\";\r\n\r\nconst alignContent = [\r\n  \"start\",\r\n  \"end\",\r\n  \"center\",\r\n  \"stretch\",\r\n  \"space-around\",\r\n  \"space-between\",\r\n  \"space-evenly\"\r\n];\r\n\r\nconst alignItems = [\"start\", \"end\", \"center\", \"stretch\", \"baseline\"];\r\n\r\nconst buttons = [\r\n  {\r\n    name: \"Remove Item\",\r\n    value: \"removeItem\",\r\n    class: \"fas fa-minus-circle\"\r\n  },\r\n\r\n  {\r\n    name: \"Add Item\",\r\n    value: \"addItem\",\r\n    class: \"fas fa-plus-circle\"\r\n  }\r\n];\r\n\r\nconst SidebarFlexbox = () => {\r\n  return (\r\n    <Consumer>\r\n      {context => (\r\n        <React.Fragment>\r\n          <h1 className=\"h1-grid\">Flexbox</h1>\r\n          <div>\r\n            <h2 className=\"h1-grid\">Items: {context.state.items.length}</h2>\r\n          </div>\r\n          <div className=\"buttons\">\r\n            {buttons.map((x, i) => {\r\n              return (\r\n                <i\r\n                  className={x.class}\r\n                  onClick={context[x.value]}\r\n                  name={x.name}\r\n                  key={x + i}\r\n                />\r\n              );\r\n            })}\r\n\r\n            <label htmlFor=\"align\">Align Items</label>\r\n            <select\r\n              name=\"align\"\r\n              id=\"align\"\r\n              value={context.state.align}\r\n              onChange={context.onSelect}\r\n            >\r\n              {alignItems.map((x, i) => {\r\n                return (\r\n                  <option value={x} key={i + x}>\r\n                    {\" \"}\r\n                    {x}\r\n                  </option>\r\n                );\r\n              })}\r\n            </select>\r\n            <label htmlFor=\"justify\">Justify Content</label>\r\n            <select\r\n              name=\"justify\"\r\n              id=\"justify\"\r\n              value={context.state.justify}\r\n              onChange={context.onSelect}\r\n            >\r\n              {alignContent.map((x, i) => {\r\n                return (\r\n                  <option value={x} key={i}>\r\n                    {\" \"}\r\n                    {x}\r\n                  </option>\r\n                );\r\n              })}\r\n            </select>\r\n            <Modal toRender=\"Flexbox Output\" />\r\n            <button className=\"reset\" onClick={context.reset}>\r\n              Reset\r\n            </button>\r\n          </div>\r\n        </React.Fragment>\r\n      )}\r\n    </Consumer>\r\n  );\r\n};\r\n\r\nexport default SidebarFlexbox;\r\n","import React from \"react\";\r\nimport { Consumer } from \"../../data/flexbox-data\";\r\n\r\nconst MainFlexbox = () => {\r\n  return (\r\n    <Consumer>\r\n      {context => (\r\n        <div className=\"face\" style={context.gridStyle}>\r\n          {context.state.items.map((x, i) => {\r\n            return (\r\n              <div className=\"items\" key={i}>\r\n                <span className=\"span\">\r\n                  {x.name} {i + 1}\r\n                </span>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      )}\r\n    </Consumer>\r\n  );\r\n};\r\n\r\nexport default MainFlexbox;\r\n","import React from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Navbar from \"./components/navBar\";\nimport \"./App.css\";\nimport \"./components/main.css\";\nimport TransformData from \"./data/transform-data\";\nimport Input from \"./components/transform/sidebar\";\nimport Face from \"./components/transform/main\";\nimport SidebarGrid from \"./components/grid/sidebar\";\nimport MainGrid from \"./components/grid/main\";\nimport GridData from \"./data/grid-data\";\nimport SidebarFlexbox from \"./components/flexbox/sidebar\";\nimport MainFlexbox from \"./components/flexbox/main\";\nimport FlexboxData from \"./data/flexbox-data\";\n\nconst routes = [\n  {\n    path: \"/CSS-Tool/\",\n    exact: true,\n    sidebar: () => <Input />,\n    main: () => <Face />\n  },\n  {\n    path: \"/CSS-Tool/grid\",\n    sidebar: () => <SidebarGrid />,\n    main: () => <MainGrid />\n  },\n  {\n    path: \"/CSS-Tool/flexbox\",\n\n    sidebar: () => <SidebarFlexbox />,\n    main: () => <MainFlexbox />\n  }\n];\n\nclass App extends React.Component {\n  render() {\n    return (\n      <Router>\n        {\" \"}\n        <div className=\"App grid\">\n          <TransformData>\n            <GridData>\n              <FlexboxData>\n                <div className=\"panel\">\n                  <Navbar />\n                  {routes.map(route => (\n                    <Route\n                      key={route.path}\n                      path={route.path}\n                      exact={route.exact}\n                      component={route.sidebar}\n                    />\n                  ))}\n                </div>\n\n                {routes.map(route => (\n                  <Route\n                    key={route.path}\n                    path={route.path}\n                    exact={route.exact}\n                    component={route.main}\n                  />\n                ))}\n              </FlexboxData>\n            </GridData>\n          </TransformData>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}